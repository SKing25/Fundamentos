public class Cuenta {
    protected int numeroCuenta;
    protected int añoApertura;
    protected Titular titular;
    protected double saldo;

    public Cuenta(int numeroCuenta, int añoApertura, Titular titular) {
        this.numeroCuenta = numeroCuenta;
        this.añoApertura = añoApertura;
        this.titular = titular;
        this.saldo = 0;
    }

    public int getNumeroCuenta() {
        return numeroCuenta;
    }

    public void setNumeroCuenta(int numeroCuenta) {
        this.numeroCuenta = numeroCuenta;
    }

    public int getAñoApertura() {
        return añoApertura;
    }

    public void setAñoApertura(int añoApertura) {
        this.añoApertura = añoApertura;
    }

    public Titular getTitular() {
        return titular;
    }

    public void setTitular(Titular titular) {
        this.titular = titular;
    }

    public double getSaldo() {
        return saldo;
    }

    public void setSaldo(double saldo) {
        this.saldo = saldo;
    }

    @Override
    public String toString() {
        return "Numero de cuenta: " + numeroCuenta + " - Año de apertura: " + añoApertura + " - Titular: " + titular.getNombreApellido();
    }
    
    
}

public interface IRetiro {
    
    public void retiro(long valor);
}


public interface IDeposito {
    
    public void deposito(long valor);
}


import java.time.LocalDate;

public class Nomina extends Cuenta implements IRetiro {
    private String empresa;
    private LocalDate fechaRetiro;

    public Nomina(int numeroCuenta, int añoApertura, Titular titular, String empresa) {
        super(numeroCuenta, añoApertura, titular);
        this.empresa = empresa;
        this.fechaRetiro = LocalDate.now();
    }

    @Override
    public void retiro(long valor) {
        this.saldo -= valor;
    }

    public String getEmpresa() {
        return empresa;
    }

    public void setEmpresa(String empresa) {
        this.empresa = empresa;
    }

    public LocalDate getFechaRetiro() {
        return fechaRetiro;
    }

    public void setFechaRetiro(LocalDate fechaRetiro) {
        this.fechaRetiro = fechaRetiro;
    }

    @Override
    public String toString() {
        return super.toString() + " - Tipo de cuenta: Nomina";
    }

    
    
}




import java.time.LocalDate;

public class Corriente extends Cuenta implements IRetiro, IDeposito {
    private LocalDate fechaMovimiento;
    private long valorMovimiento;

    public Corriente(int numeroCuenta, int añoApertura, Titular titular, long valorMovimiento) {
        super(numeroCuenta, añoApertura, titular);
        this.fechaMovimiento = LocalDate.now();
        this.valorMovimiento = valorMovimiento;
    }

    @Override
    public void retiro(long valor) {
        this.saldo -= valor;
        this.valorMovimiento = -valor; 
        
    }

    @Override
    public void deposito(long valor) {
        this.saldo += valor;
        this.valorMovimiento = valor;
        
    }

    

    public LocalDate getFechaMovimiento() {
        return fechaMovimiento;
    }

    public void setFechaMovimiento(LocalDate fechaMovimiento) {
        this.fechaMovimiento = fechaMovimiento;
    }

    public long getValorMovimiento() {
        return valorMovimiento;
    }

    public void setValorMovimiento(long valorMovimiento) {
        this.valorMovimiento = valorMovimiento;
    }

    @Override
    public String toString() {
        return super.toString() + " - Tipo de cuenta: Corriente";
    }

    
    
    
}





public class Ahorro extends Cuenta implements IRetiro, IDeposito{
    private final double INTERES = 0.03;

    public Ahorro(int numeroCuenta, int añoApertura, Titular titular) {
        super(numeroCuenta, añoApertura, titular);
    }

    @Override
    public void retiro(long valor) {
        this.saldo -= valor;
        
    }

    @Override
    public void deposito(long valor) {
        this.saldo = this.saldo + valor + (valor * INTERES);
        
    }

    public double getINTERES() {
        return INTERES;
    }

    @Override
    public String toString() {
        return super.toString() + " - Tipo de cuenta: Ahorro";
    }
    
}





public class Vivienda extends Cuenta implements IDeposito{
    private double precio;
    private String tipo;

    public Vivienda(int numeroCuenta, int añoApertura, Titular titular, double precio, String tipo) {
        super(numeroCuenta, añoApertura, titular);
        this.precio = precio;
        this.tipo = tipo;
    }

    @Override
    public void deposito(long valor) {
        this.saldo += valor; 
        if(this.saldo >= precio){
            System.out.println("Pago de vivienda realizado");
        }
        else{
            System.out.println("Deposito realizado");
            System.out.println("Falta $" + (precio - saldo) + " para completar el pago de vivienda");
        }       
    }

    public double getPrecio() {
        return precio;
    }

    public void setPrecio(double precio) {
        this.precio = precio;
    }

    public String getTipo() {
        return tipo;
    }

    public void setTipo(String tipo) {
        this.tipo = tipo;
    }

    @Override
    public String toString() {
        return super.toString() + " - Tipo de cuenta: Vivienda";
    }
    
}




public class Titular {
    private int id;
    private String nombreApellido;
    private String correo;
    
    public Titular(int id, String nombreApellido, String correo) {
        this.id = id;
        this.nombreApellido = nombreApellido;
        this.correo = correo;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getNombreApellido() {
        return nombreApellido;
    }

    public void setNombreApellido(String nombreApellido) {
        this.nombreApellido = nombreApellido;
    }

    public String getCorreo() {
        return correo;
    }

    public void setCorreo(String correo) {
        this.correo = correo;
    }

    
}





import java.util.ArrayList;

public class AppBanco {
public static void main(String[] args) {
    ArrayList<Cuenta> lista = new ArrayList<>();

    Titular titular1 = new Titular(10, "Santiago Rodriguez", "santi20@gmail.com");
    Cuenta nomina = new Nomina(1010, 2023, titular1, "U Sergio Arboleda");
    lista.add (nomina);

    Titular titular2 = new Titular(20, "Nicolas Perez", "nicoperez@gmail.com");
    Cuenta corriente = new Corriente(1020, 2020, titular2, 0);
    lista.add (corriente);

    Titular titular3 = new Titular(30, "Camilo Diaz", "camidiaz@gmail.com");
    Cuenta ahorro = new Ahorro(1030, 2003, titular3);
    lista.add (ahorro);

    Titular titular4 = new Titular(40, "Jorge Garcia", "d10s@gmail.com");
    Cuenta vivienda = new Vivienda(1040, 2009, titular4, 1000000, "Apartamento");
    lista.add (vivienda);

    for(int i = 0; i < lista.size(); i++){
        System.out.println(lista.get(i));
    }

}
    
}
